/*
8 Explain Purpose of Try and Catch Block & Why do we need it?
*/
Ans:-
The try and catch blocks are constructs in JavaScript used for error handling and exception handling. They help in managing and controlling potential errors or exceptions that may occur during the execution of a block of code. The purpose of the try and catch blocks is to handle and recover from errors gracefully, preventing the program from abruptly terminating.

Here's an explanation of the purpose of try and catch blocks and why we need them:

1.Error Handling:

The try block is used to enclose a section of code where an error or exception might occur. It defines the section of code that needs to be monitored for errors.
The catch block is used to define the actions to be taken if an error occurs within the corresponding try block. It specifies the code to handle the error condition.
Example:

javascript

try {
  // Code that might throw an error
} catch (error) {
  // Code to handle the error
}

When an error occurs within the try block, the execution is immediately transferred to the catch block, allowing you to gracefully handle the error condition.

2.Graceful Error Handling:

The main purpose of try and catch blocks is to provide a mechanism for graceful error handling. They prevent the program from crashing or terminating abruptly when an error occurs.
By encapsulating potentially error-prone code within a try block and providing appropriate error-handling code within the catch block, you can control how the program reacts to errors.
Instead of letting the error propagate and disrupt the program flow, you can handle the error, log relevant information, display user-friendly messages, or take other appropriate actions.

3.Error Recovery and Fall-back Logic:

The try and catch blocks allow you to define recovery logic or fallback strategies in case of errors. You can include alternative code paths or actions within the catch block to handle errors and continue the program execution.
This enables you to respond to errors in a controlled manner, providing fallback behavior or alternative paths that ensure the program can recover or gracefully degrade when encountering errors.

4.Error Reporting and Logging:

The catch block provides an opportunity to log or report errors. You can log relevant error details, such as error messages, stack traces, or additional contextual information for debugging purposes.
Error reporting helps in diagnosing and troubleshooting issues by capturing critical information about the error occurrence.

In summary, the try and catch blocks in JavaScript are essential for error handling and exception handling. They allow you to gracefully handle errors, recover from exceptional conditions, define fallback strategies, and log or report errors. Using try and catch blocks helps maintain program stability, improve user experience, and assist in the debugging and maintenance of JavaScript code.